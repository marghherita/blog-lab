/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WipRouteImport } from './routes/wip'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as AppAboutRouteImport } from './routes/_app.about'
import { Route as AppAuthRouteImport } from './routes/_app._auth'
import { Route as AppAuthDashboardRouteImport } from './routes/_app._auth.dashboard'

const WipRoute = WipRouteImport.update({
  id: '/wip',
  path: '/wip',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppAboutRoute = AppAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRoute,
} as any)
const AppAuthRoute = AppAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => AppRoute,
} as any)
const AppAuthDashboardRoute = AppAuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppAuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/wip': typeof WipRoute
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/dashboard': typeof AppAuthDashboardRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/wip': typeof WipRoute
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/dashboard': typeof AppAuthDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/wip': typeof WipRoute
  '/_app/_auth': typeof AppAuthRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/_auth/dashboard': typeof AppAuthDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/sign-up' | '/wip' | '/about' | '/' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-up' | '/wip' | '/about' | '/' | '/dashboard'
  id:
    | '__root__'
    | '/_app'
    | '/sign-in'
    | '/sign-up'
    | '/wip'
    | '/_app/_auth'
    | '/_app/about'
    | '/_app/'
    | '/_app/_auth/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  WipRoute: typeof WipRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wip': {
      id: '/wip'
      path: '/wip'
      fullPath: '/wip'
      preLoaderRoute: typeof WipRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/_auth': {
      id: '/_app/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppAuthRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/_auth/dashboard': {
      id: '/_app/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppAuthDashboardRouteImport
      parentRoute: typeof AppAuthRoute
    }
  }
}

interface AppAuthRouteChildren {
  AppAuthDashboardRoute: typeof AppAuthDashboardRoute
}

const AppAuthRouteChildren: AppAuthRouteChildren = {
  AppAuthDashboardRoute: AppAuthDashboardRoute,
}

const AppAuthRouteWithChildren = AppAuthRoute._addFileChildren(AppAuthRouteChildren)

interface AppRouteChildren {
  AppAuthRoute: typeof AppAuthRouteWithChildren
  AppAboutRoute: typeof AppAboutRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAuthRoute: AppAuthRouteWithChildren,
  AppAboutRoute: AppAboutRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  WipRoute: WipRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
